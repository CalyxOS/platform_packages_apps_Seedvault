{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2311fa0f_6be88056",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-01T09:41:38Z",
      "side": 1,
      "message": "Now the question becomes: How do we deal with this upstream",
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "becc24e6_035c9a6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-01T11:33:49Z",
      "side": 1,
      "message": "Yeah, it\u0027s unfortunate that it requires change 4241. Otherwise upstream would be fine with this patch I\u0027d think",
      "parentUuid": "2311fa0f_6be88056",
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "551c6875_5ecb40e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-01T11:35:39Z",
      "side": 1,
      "message": "Well, I can think of one option but I don\u0027t know what it would look like. Could try figuring what is sending the URI with userId all the way down to that frameworks code and see if we can send it without userId while keeping the rest of the usage of the URI with userId?",
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7232bf_8e5ca0da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-01T11:39:39Z",
      "side": 1,
      "message": "It\u0027d also help with LineageOS the userdebug/eng change.",
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36f041b6_0e56536a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-01T11:39:39Z",
      "side": 1,
      "message": "A cleaner option might be to have some sort of BuildConfig file that this then checks against.\n\nUpstream has a default BuildConfig file with this set to false, so the code becomes a no-op\nWe have our own file (say in src_calyx) where it is set to true.\n\nSomething like https://github.com/LineageOS/android_packages_apps_Etar/blob/lineage-18.1/src_aosp/ws/xsoh/etar/BuildConfig.java",
      "parentUuid": "551c6875_5ecb40e0",
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8ff3ac_e1085195",
        "filename": "app/src/main/java/com/stevesoltys/seedvault/ui/storage/StorageRootFetcher.kt",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-01T11:38:59Z",
      "side": 1,
      "message": "https://github.com/seedvault-app/seedvault/blob/master/app/src/main/java/com/stevesoltys/seedvault/ui/storage/StorageRootsFragment.kt#L113\nThis is the URI that causes trouble in https://review.calyxos.org/c/CalyxOS/platform_frameworks_base/+/4241\nWe need the user id for other parts of the android code but it must not be present for the authority comparison",
      "range": {
        "startLine": 53,
        "startChar": 12,
        "endLine": 54,
        "endChar": 63
      },
      "revId": "bd4d962745936816e75a56ca159438be17643713",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ]
}