container:
  image: ghcr.io/cirruslabs/android-sdk:33
  kvm: true
  cpu: 8
  memory: 16G

check_android_task:
  skip: "!changesInclude('.cirrus.yml', '*.gradle', '*.gradle.kts', '**/*.gradle', '**/*.gradle.kts', '*.properties', '**/*.properties', '**/*.kt', '**/*.xml')"
  create_avd_script:
  start_avd_background_script:
    sdkmanager --install "system-images;android-33;google_apis;x86_64";
    echo no | avdmanager create avd -n seedvault -k "system-images;android-33;google_apis;x86_64";
    $ANDROID_HOME/emulator/emulator
    -avd seedvault
    -no-audio
    -no-boot-anim
    -gpu swiftshader_indirect
    -no-snapshot
    -no-window
    -writable-system;
  provision_avd_background_script:
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;';
    wget --output-document etar.apk https://f-droid.org/repo/ws.xsoh.etar_35.apk;
    adb install etar.apk

    adb root;
    sleep 5;
    adb remount;
    adb reboot;
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;';
    adb root;
    sleep 5;
    adb remount;
  assemble_release_script:
    ./gradlew :app:assembleRelease :app:assembleAndroidTest
  install_app_script:
    timeout 180s bash -c 'while [[ -z $(adb shell mount | grep "/system " | grep "(rw,") ]]; do sleep 1; done;';
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;';
    adb shell mkdir -p /system/priv-app/Seedvault;
    adb push app/build/outputs/apk/release/app-release.apk /system/priv-app/Seedvault/Seedvault.apk;
    adb push permissions_com.stevesoltys.seedvault.xml /system/etc/permissions/privapp-permissions-seedvault.xml;
    adb push allowlist_com.stevesoltys.seedvault.xml /system/etc/sysconfig/allowlist-seedvault.xml;
    adb shell bmgr enable true;
    adb shell bmgr transport com.stevesoltys.seedvault.transport.ConfigurableBackupTransport;
    adb reboot;
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;';
  run_large_tests_script: ./gradlew -Pinstrumented_test_size=large :app:connectedAndroidTest
  run_medium_tests_script: ./gradlew -Pinstrumented_test_size=medium :app:connectedAndroidTest
  always:
    pull_screenshots_script:
      adb pull /sdcard/Documents/screenshots
    screenshots_artifacts:
      path: "screenshots/**/*.png"
